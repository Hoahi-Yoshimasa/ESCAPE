//=============================================================================
//
// 鍵のモデル処理 [item_key.h]
// Author : 星克昌
//
//=============================================================================
#pragma once


//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MAX_KEY		(3)						// 鍵の数

#define	KEY_SIZE		(15.0f)				// 当たり判定の大きさ
#define KEY_OFFSET_Y	(30.0f)				// 鍵の高さ

enum
{
	RED_KEY,		// 赤い鍵
	BLUE_KEY,		// 青い鍵
	YELLOW_KEY,		// 黄色い鍵
};
//*****************************************************************************
// 構造体定義
//*****************************************************************************
struct KEY
{
	XMFLOAT4X4			mtxWorld;			// ワールドマトリックス
	XMFLOAT3			pos;				// モデルの位置
	XMFLOAT3			rot;				// モデルの向き(回転)
	XMFLOAT3			scl;				// モデルの大きさ(スケール)

	BOOL				use;
	BOOL				load;
	DX11_MODEL			model;				// モデル情報
	XMFLOAT4			diffuse[MODEL_MAX_MATERIAL];	// モデルの色

	float				size;				// 当たり判定の大きさ
	int					shadowIdx;			// 影のインデックス番号
	
};

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitKey(void);
void UninitKey(void);
void UpdateKey(void);
void DrawKey(void);

KEY *GetKey(void);

